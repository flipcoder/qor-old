
attribute vec3 tangent;
attribute vec3 binormal;
uniform mat4 ViewMatrix;
uniform vec4 Light;
/*uniform vec3 LightAtten;*/
/*uniform vec3 LightColor;*/
/*varying vec3 vTangent;*/
/*varying vec3 vBinormal;*/
varying vec2 vUV;
varying vec3 vLightDir;
varying vec3 vLight;
varying vec3 vViewDir;
/*varying vec3 vNormal;*/
/*varying vec3 vVertex;*/


void main(void)
{  
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	vUV = gl_MultiTexCoord0;
	
	vec3 vTangent = normalize(gl_NormalMatrix * tangent);
    vec3 vBinormal = normalize(gl_NormalMatrix * binormal);
	vec3 vNormal = normalize(gl_NormalMatrix * gl_Normal);
    /*vBinormal = cross(vTangent, vNormal);*/
	
	vec3 vVertex = gl_ModelViewMatrix * gl_Vertex;

    mat3 tspace = mat3(vTangent,vBinormal,vNormal);
    /*mat3 tspace = mat3(*/
    /*    vTangent.x, vBinormal.x, vNormal.x,*/
    /*    vTangent.y, vBinormal.y, vNormal.y,*/
    /*    vTangent.z, vBinormal.z, vNormal.z*/
    /*);*/
	vViewDir = -vVertex;
	vViewDir *= tspace;

	vLight = ViewMatrix * Light;
	vLightDir = vLight - vVertex;
	vLightDir *= tspace;
}

